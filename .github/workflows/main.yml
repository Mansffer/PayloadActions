name: Extract and Upload to Dropbox

on:
    workflow_dispatch:
        inputs:
            ROM_URL:
                description: "ROM_URL"
                default: "https://builds.paranoidandroid.co/aospa-uvite-beta-oneplus9-20240412.zip"
            DEVICE_NAME:
                description: "DEVICE_NAME"
                default: "oneplus9"
            EXTRACTED_FILES:
                description: "EXTRACTED_FILES"
                default: "boot.img, dtbo.img, product.img, system.img, system_ext.img"

jobs:
    build-and-upload:
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download file
              run: curl -LJO ${{ github.event.inputs.ROM_URL }}

            - name: Extract Payload
              run: |
                  chmod u+x .github/scripts/android-ota-extractor
                  .github/scripts/android-ota-extractor *.zip
                  echo "ZIP_FILE=$(basename -a *.zip)" >> $GITHUB_ENV
                  echo "ZIP_FILE_SHA256=$(sha256sum *.zip | cut -d' ' -f1)" >> $GITHUB_ENV

                  large_files=$(find . -maxdepth 1 -type f -size +5G)
                  if [ -n "$large_files" ]; then
                    echo -e "\n::warning:: Deleting files larger than 5 GB..."
                    for file in $large_files; do
                      echo "$file ($(du -h "$file" | awk '{print $1}'))" && rm "$file"
                    done
                  fi

            - name: Find files to upload
              id: file_list
              run: |
                  files=$(find . -maxdepth 1 -type f ! -size +5G)
                  echo "::set-output name=files::$files"

            - name: Upload files to Dropbox
              run: |
                for file in ${{ steps.file_list.outputs.files }}; do
                  filename=$(basename "$file")
                  curl -X POST https://content.dropboxapi.com/2/files/upload \
                    --header "Authorization: Bearer ${{ secrets.DROPBOX_ACCESS_TOKEN }}" \
                    --header "Dropbox-API-Arg: {\"path\": \"/${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}/$filename\",\"mode\": \"add\",\"autorename\": true,\"mute\": false,\"strict_conflict\": false}" \
                    --header "Content-Type: application/octet-stream" \
                    --data-binary @"$file"
                done
